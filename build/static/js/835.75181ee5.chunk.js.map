{"version":3,"file":"static/js/835.75181ee5.chunk.js","mappings":"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","sources":["components/allChar/AllChar.js","components/pages/CharactersPage.js","hooks/debounce.hook.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport useAnimeServices from '../services/AnimeServices';\r\nimport { useDebounce } from '../../hooks/debounce.hook';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport heart from '../../resources/img/heart.png';\r\nimport favourite from '../../resources/img/favourite.png';\r\nimport arrow from '../../resources/img/arrow.png';\r\nimport './allChar.scss';\r\n\r\nconst AllChar = ({getIdSelectChar}) => {\r\n    const [chars, setChars] = useState([]);\r\n    const [originalChars, setOriginalChars] = useState([]);\r\n    const [char, setChar] = useState([]);\r\n    const [term, setTerm] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [countPage, setCountPage] = useState(2);\r\n\r\n    const {getCharacterByName, getCharacterToOffset, loading, error} = useAnimeServices();\r\n    const debounceSearchTerm = useDebounce(term, 500);\r\n\r\n    useEffect(()=> {\r\n        if(debounceSearchTerm) {\r\n            getCharacterByName(debounceSearchTerm).then(setChar)\r\n        }\r\n    }, [debounceSearchTerm]);\r\n\r\n    useEffect(()=> {\r\n        updateChars();\r\n    }, []);\r\n\r\n    const updateChars = (offset) => {\r\n        getCharacterToOffset(offset).then(data => {\r\n            setChars(data);\r\n            setOriginalChars(data);\r\n        });\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setChars(filterChars(value, originalChars));\r\n    }, [value]);\r\n\r\n    const updateTerm = (e) => {\r\n        setTerm(e.target.value);\r\n    }\r\n\r\n    const updateValue = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const addInFavourite = (e) => {\r\n        if(e.target.src === favourite) {\r\n            e.target.src = heart;\r\n        } else {\r\n            e.target.src = favourite;\r\n        }\r\n    }\r\n\r\n    const filterChars = (value, data) => {\r\n        let filteredChars = [...data];\r\n        switch(value) {\r\n            case 'popular':\r\n                return filteredChars.sort((a, b) => b.favourites - a.favourites);\r\n            case 'name':\r\n                return filteredChars.sort((a,b) => a.name.full.localeCompare(b.name.full));\r\n            case 'anime':\r\n                return filteredChars.filter(item => item.media?.edges?.[0]?.node?.type === 'ANIME');\r\n            default:\r\n                return chars;\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setCountPage(countPage => countPage + 1);\r\n        updateChars(countPage);\r\n    }\r\n\r\n    const prevPage = () => {\r\n        if(countPage > 1) {\r\n            setCountPage(countPage => countPage - 1);\r\n        }\r\n        updateChars(countPage);\r\n    }\r\n\r\n    const items = chars.map((item) => {\r\n        return (\r\n            <li onClick={()=> getIdSelectChar(item.id)} className='all-char__item' key={item.id}>\r\n                <Link to='/characters/character'><img className='all-char__img' src={item.image.large} alt={item.name.full} /></Link>\r\n                <div className=\"all-char__info\">\r\n                    <div className=\"all-char__name\">{item.name.full}</div>\r\n                    <div className=\"all-char__favorite\">\r\n                        <img onClick={addInFavourite} src={heart} alt=\"heart\" />\r\n                        <div>{item.favourites}</div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    const content = char && term.length > 1 && !loading && !error\r\n    ? <View getIdSelectChar={getIdSelectChar} id={char.id} name={char.name} favourites={char.favourites} img={char.img}/> \r\n    : items;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-container\">\r\n                <h2 className=\"search-title\">–ü–µ—Ä—Å–æ–Ω–∞–∂—ñ</h2>\r\n                <div className=\"search-bar\">\r\n                    <div className=\"search-input\">\r\n                        <span className=\"icon\">üîç</span>\r\n                        <input onChange={(e) => updateTerm(e)} value={term} type=\"text\" placeholder=\"–ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é\"/>\r\n                    </div>\r\n                    <select onChange={updateValue} className=\"btn sort-btn\" name=\"sort\" id=\"sort\">\r\n                        <option value=''>–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</option>\r\n                        <option value=\"popular\">–ü–æ–ø—É–ª—è—Ä–Ω—ñ</option>\r\n                        <option value=\"name\">–ó–∞ –Ω–∞–∑–≤–æ—é</option>\r\n                    </select>\r\n                    <select onChange={updateValue} className=\"btn filter-btn\" name=\"filter\" id=\"filter\">\r\n                        <option value=\"\">–§—ñ–ª—å—Ç—Ä</option>\r\n                        <option value=\"anime\">–ê–Ω—ñ–º–µ</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {spinner}\r\n            {errorMessage}\r\n            <ul className=\"all-char\">\r\n                {content}\r\n            </ul>\r\n            <div className=\"all-char__navigation\">\r\n                <img onClick={prevPage} style={{'transform': 'rotate(180deg)'}} src={arrow} alt=\"arrow\" />\r\n                <div className='all-char__page'>\r\n                    <div tabIndex={0} onClick={(e)=> updateChars(e.target.textContent)}>1</div>\r\n                    <div tabIndex={0} onClick={(e)=> updateChars(e.target.textContent)}>2</div>\r\n                    <div tabIndex={0} onClick={(e)=> updateChars(e.target.textContent)}>3</div>\r\n                    <div tabIndex={0} onClick={(e)=> updateChars(e.target.textContent)}>4</div>\r\n                    <div style={{'cursor': 'not-allowed'}}>...</div>\r\n                    <div tabIndex={0} onClick={(e)=> updateChars(e.target.textContent)}>500</div>\r\n                </div>\r\n                <img onClick={nextPage} src={arrow} alt=\"arrow\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({id, name, img, favourites, getIdSelectChar}) => {\r\n    return (\r\n        <li onClick={()=> getIdSelectChar(id)} className='all-char__item' key={id}>\r\n            <Link to=\"/characters/character\"><img className='all-char__img' src={img} alt={name} /></Link>\r\n            <div className=\"all-char__info\">\r\n                <div className=\"all-char__name\">{name}</div>\r\n                <div className=\"all-char__favorite\">\r\n                    <img src={heart} alt=\"heart\" />\r\n                    <div>{favourites}</div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AllChar;","\r\nimport AllChar from \"../allChar/AllChar\";\r\n\r\nconst CharactersPage = ({getIdSelectChar}) => {\r\n    return (\r\n        <AllChar getIdSelectChar={getIdSelectChar} /> \r\n    )\r\n}\r\n\r\nexport default CharactersPage;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n    const [debounceValue, setDebounceValue] = useState(value);\r\n\r\n    useEffect(()=> {\r\n        const handler = setTimeout(()=> {\r\n            setDebounceValue(value);\r\n        }, delay);\r\n\r\n        return () => clearTimeout(handler);\r\n    }, [value, delay]);\r\n\r\n    return debounceValue;\r\n}"],"names":["View","_ref2","id","name","img","favourites","getIdSelectChar","_jsxs","onClick","className","children","_jsx","Link","to","src","alt","heart","_ref","chars","setChars","useState","originalChars","setOriginalChars","char","setChar","term","setTerm","value","setValue","countPage","setCountPage","getCharacterByName","getCharacterToOffset","loading","error","useAnimeServices","debounceSearchTerm","useDebounce","useEffect","then","updateChars","offset","data","filterChars","updateValue","e","target","addInFavourite","favourite","filteredChars","sort","a","b","full","localeCompare","filter","item","_item$media","_item$media$edges","_item$media$edges$","_item$media$edges$$no","media","edges","node","type","items","map","image","large","content","length","spinner","Spinner","errorMessage","ErrorMessage","_Fragment","onChange","updateTerm","placeholder","prevPage","style","arrow","tabIndex","textContent","nextPage","AllChar","delay","debounceValue","setDebounceValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}