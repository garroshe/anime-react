{"version":3,"file":"static/js/677.66165ed0.chunk.js","mappings":"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","sources":["components/allAnime/AllAnime.js","components/pages/AnimePage.js","hooks/debounce.hook.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useAnimeServices from \"../services/AnimeServices\";\r\n\r\nimport { useDebounce } from \"../../hooks/debounce.hook\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport next from '../../resources/img/next.png';\r\n\r\nimport './allAnime.scss';\r\n\r\nconst AllAnime = ({getIdSelectChar}) => {\r\n\r\n    const [term, setTerm] = useState('');\r\n    const [anime, setAnime] = useState([]);\r\n    const [oneAnime, setOneAnime] = useState([]);\r\n    const [value, setValue] = useState('');\r\n    const [toggle, setToggle] = useState(false);\r\n    const [page,setPage] = useState(2);\r\n    const [filters, setFilters] = useState({\r\n        episodes: { from: \"\", to: \"\" },\r\n        scores: { from: \"\", to: \"\" },\r\n        rating: { from: \"\", to: \"\" },\r\n        type: { tv: false, movie: false, ova: false },\r\n    });\r\n\r\n    const debounceSearchTerm = useDebounce(term, 500);\r\n    const {loading, error, getAnimeToOffset, getAnimeByName} = useAnimeServices();\r\n\r\n    useEffect(()=> {\r\n        if(debounceSearchTerm) {\r\n            getAnimeByName(debounceSearchTerm).then(setOneAnime);\r\n        }\r\n    }, [debounceSearchTerm]);\r\n\r\n    useEffect(()=> {\r\n        updateAnime();\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        setAnime(filterAnime(value, anime));\r\n    }, [value]);\r\n\r\n    const updateTerm = (e) => {\r\n        setTerm(e.target.value);    \r\n    }\r\n\r\n    const updateValue = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const updateAnime = () => {\r\n        getAnimeToOffset().then((newAnime) => {\r\n            setAnime((prevAnime => [...prevAnime, ...newAnime]));\r\n        });\r\n    }\r\n\r\n    const filterAnime = (value, data) => {\r\n        let filteredAnime = [...data];\r\n        switch(value) {\r\n            case 'popular':\r\n                return filteredAnime.sort((a,b) => b.popularity - a.popularity);\r\n            case 'name':\r\n                return filteredAnime.sort((a, b) => {\r\n                    const titleA = a.title.english || '';\r\n                    const titleB = b.title.english || '';\r\n                    return titleA.localeCompare(titleB);\r\n                });\r\n            case 'episodes':\r\n                return filteredAnime.sort((a,b) => b.episodes - a.episodes);\r\n            default: return anime;\r\n        }\r\n    }\r\n\r\n    const handleApplyFilters = (filters) => {\r\n        let filteredAnime = [...anime];\r\n        filteredAnime = filteredAnime.filter(item => item.episodes > filters.episodes.from && item.episodes < filters.episodes.to);\r\n        // filteredAnime = filteredAnime.filter(item => item.popularity > filters.scores.from && item.popularity < filters.scores.to);\r\n\r\n        return filteredAnime;\r\n    }\r\n\r\n    const handleChange = (category, key, value) => {\r\n        setFilters(prev => ({\r\n            ...prev,\r\n            [category]: { ...prev[category], [key]: value }\r\n        }));\r\n    };\r\n\r\n    const handleCheckbox = (key) => {\r\n        setFilters(prev => ({\r\n            ...prev,\r\n            type: { ...prev.type, [key]: !prev.type[key] }\r\n        }));\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setFilters({\r\n            episodes: { from: \"\", to: \"\" },\r\n            scores: { from: \"\", to: \"\" },\r\n            rating: { from: \"\", to: \"\" },\r\n            type: { tv: false, movie: false, ova: false },\r\n        });\r\n        updateAnime();\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        setAnime(handleApplyFilters(filters));\r\n    };\r\n\r\n    const items = anime.map(item => {\r\n        return (\r\n            <li key={item.id}>\r\n                <Link to='/anime/singleanime'><img src={item.coverImage.large} alt={item.title.english} /></Link>\r\n                <div style={{'height': '60px', 'background': ' #1c1c1c', 'padding': '5px 0 0 5px'}}>\r\n                    <div className=\"all-anime__title\">{item.title.english ? item.title.english : item.title.romaji}</div>\r\n                    <div className=\"all-anime__format\">{item.format}</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    const oneAnimeItems = oneAnime.map(item => {\r\n        return (\r\n            <li onClick={() => getIdSelectChar(item.id)} key={item.id}>\r\n                <img src={item.coverImage.large} alt={item.title.english} />\r\n                <div style={{'height': '60px', 'background': ' #1c1c1c', 'padding': '5px 0 0 5px'}}>\r\n                    <div className=\"all-anime__title\">{item.title.english ? item.title.english : item.title.romaji}</div>\r\n                    <div className=\"all-anime__format\">{item.format}</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    const spinner = loading && !error ? <Spinner/> : null;\r\n    const errorMessage = error && !loading ? <ErrorMessage/> : null;\r\n    const content = oneAnime && term.length > 1 && !loading && !error\r\n    ? <View oneAnimeItems={oneAnimeItems}/> \r\n    : items;\r\n\r\n    return (\r\n        <div className=\"all-anime__wrapper\">\r\n            <div className=\"all-anime__container\">\r\n                <div className=\"search-container\">\r\n                    <h2 className=\"search-title\">Аніме</h2>\r\n                    <div className=\"search-bar\">\r\n                        <div className=\"search-input\">\r\n                            <span className=\"icon\">🔍</span>\r\n                            <input onChange={(e) => updateTerm(e)} value={term} type=\"text\" placeholder=\"Пошук за назвою\"/>\r\n                        </div>\r\n                        <select onChange={(e) => updateValue(e)} className=\"btn sort-btn\" name=\"sort\" id=\"sort\">\r\n                            <option value=''>Сортування за</option>\r\n                            <option value=\"popular\">Популярністю</option>\r\n                            <option value=\"name\">Назвою</option>\r\n                            <option value=\"episodes\">Кількістю епізодів</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                {spinner}\r\n                {errorMessage}\r\n                <ul className=\"all-anime__grid\">\r\n                    {content}\r\n                </ul>\r\n            </div>\r\n            {!toggle ? <Filter handleCheckbox={handleCheckbox} applyFilters={applyFilters} resetFilters={resetFilters} handleChange={handleChange} filters={filters} next={next} setToggle={setToggle}/> : <Genre setToggle={setToggle} next={next}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({oneAnimeItems}) => {\r\n    return (\r\n        <ul className=\"all-anime__grid\">\r\n            {oneAnimeItems}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst Filter = ({next, setToggle, handleChange, filters, resetFilters, applyFilters, handleCheckbox}) => {\r\n    return (\r\n        <div className=\"all-anime__filter\">\r\n            <div onClick={()=> setToggle(true)} className=\"all-anime__zhanr\">\r\n                <div className=\"all-anime__filter-select\">Жанри</div>\r\n                <div className=\"all-anime__filter-value\">будь-які <img src={next} alt=\"next\" /></div>\r\n            </div>\r\n            <div className=\"all-anime__filter-title\">Кількість епізодів</div>\r\n            <div className=\"all-anime__filter-inputs\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Від\"\r\n                    value={filters.episodes.from}\r\n                    onChange={(e) => handleChange(\"episodes\", \"from\", e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"До\"\r\n                    value={filters.episodes.to}\r\n                    onChange={(e) => handleChange(\"episodes\", \"to\", e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"all-anime__filter-title\">Кількість оцінок</div>\r\n            <div className=\"all-anime__filter-inputs\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Від\"\r\n                    value={filters.scores.from}\r\n                    onChange={(e) => handleChange(\"scores\", \"from\", e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"До\"\r\n                    value={filters.scores.to}\r\n                    onChange={(e) => handleChange(\"scores\", \"to\", e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"all-anime__filter-title\">Рейтинг</div>\r\n            <div className=\"all-anime__filter-inputs\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Від\"\r\n                    value={filters.rating.from}\r\n                    onChange={(e) => handleChange(\"rating\", \"from\", e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"До\"\r\n                    value={filters.rating.to}\r\n                    onChange={(e) => handleChange(\"rating\", \"to\", e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"all-anime__filter-title\">Тип</div>\r\n            <div className=\"all-anime__filter-inputs\">\r\n                <label htmlFor=\"tv\">\r\n                    TV серіали\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"tv\"\r\n                        checked={filters.type.tv}\r\n                        onChange={() => handleCheckbox(\"tv\")}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"movie\">\r\n                    Фільми\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"movie\"\r\n                        checked={filters.type.movie}\r\n                        onChange={() => handleCheckbox(\"movie\")}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"ova\">\r\n                    OVA\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"ova\"\r\n                        checked={filters.type.ova}\r\n                        onChange={() => handleCheckbox(\"ova\")}\r\n                    />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"all-anime__filter-btns\">\r\n                <button className=\"all-anime__filter-reset\" onClick={resetFilters}>\r\n                    Скинути\r\n                </button>\r\n                <button className=\"all-anime__filter-save\" onClick={applyFilters}>\r\n                    Застосувати\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Genre = ({next, setToggle}) => {\r\n    return (\r\n        <div style={{'paddingTop': '20px'}} className=\"all-anime__filter\">\r\n            <div style={{'display': 'flex', 'gap': '5px', 'margin': '0 0 10px 0', 'cursor': 'pointer'}} onClick={()=> setToggle(false)}>\r\n                <img style={{'transform': 'rotate(180deg)'}} src={next} alt=\"next\" />\r\n                <div style={{'color': '#BFBFBF', 'fontSize': '14px', 'fontWeight': '700'}}>Назад до жанрів</div>\r\n            </div>\r\n            <hr />\r\n            <div style={{'color': '#EBEBF580', 'fontSize': '14px', 'lineHeight': '20px', 'margin': '10px 0'}}>Фільтр за жанрами</div>\r\n            <hr />\r\n            <div className=\"all-anime__filter-genre\">\r\n                <label htmlFor=\"action\">Екшен<input type=\"checkbox\" id=\"action\"/></label>\r\n                <label htmlFor=\"adventure\">Пригоди <input type=\"checkbox\" id=\"adventure\"/></label>\r\n                <label htmlFor=\"drama\">Драма <input type=\"checkbox\" id=\"drama\"/></label>\r\n                <label htmlFor=\"sci-fi\">Фантастика <input type=\"checkbox\" id=\"sci-fi\"/></label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnime;","import AllAnime from \"../allAnime/AllAnime\";\r\n\r\nconst AnimePage = ({getIdSelectChar}) => {\r\n    return (\r\n        <AllAnime getIdSelectChar={getIdSelectChar}/>\r\n    )\r\n}\r\n\r\nexport default AnimePage;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n    const [debounceValue, setDebounceValue] = useState(value);\r\n\r\n    useEffect(()=> {\r\n        const handler = setTimeout(()=> {\r\n            setDebounceValue(value);\r\n        }, delay);\r\n\r\n        return () => clearTimeout(handler);\r\n    }, [value, delay]);\r\n\r\n    return debounceValue;\r\n}"],"names":["View","_ref2","oneAnimeItems","_jsx","className","children","Filter","_ref3","next","setToggle","handleChange","filters","resetFilters","applyFilters","handleCheckbox","_jsxs","onClick","src","alt","type","placeholder","value","episodes","from","onChange","e","target","to","scores","rating","htmlFor","id","checked","tv","movie","ova","Genre","_ref4","style","_ref","getIdSelectChar","term","setTerm","useState","anime","setAnime","oneAnime","setOneAnime","setValue","toggle","page","setPage","setFilters","debounceSearchTerm","useDebounce","loading","error","getAnimeToOffset","getAnimeByName","useAnimeServices","useEffect","then","updateAnime","filterAnime","newAnime","prevAnime","data","filteredAnime","sort","a","b","popularity","titleA","title","english","titleB","localeCompare","items","map","item","Link","coverImage","large","romaji","format","spinner","Spinner","errorMessage","ErrorMessage","content","length","updateTerm","updateValue","name","key","prev","filter","handleApplyFilters","category","AllAnime","delay","debounceValue","setDebounceValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}